apiVersion: v1
data:
  prometheus.yml: |
    global:
      scrape_interval: 10s
      scrape_timeout: 10s
      evaluation_interval: 10s
    
    rule_files:
      - "/etc/prometheus/rules/*.rules"

    scrape_configs:

      # https://github.com/prometheus/prometheus/blob/master/documentation/examples/prometheus-kubernetes.yml#L37
      - job_name: 'kubernetes-nodes'
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        kubernetes_sd_configs:
          - role: node
        relabel_configs:
          - source_labels: [__address__]
            regex: '(.*):10250'
            replacement: '${1}:10255'
            target_label: __address__

      # https://github.com/prometheus/prometheus/blob/master/documentation/examples/prometheus-kubernetes.yml#L79
      - job_name: 'kubernetes-endpoints'
        kubernetes_sd_configs:
          - role: endpoints
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
            action: replace
            target_label: __scheme__
            regex: (https?)
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
            action: replace
            target_label: __address__
            regex: (.+)(?::\d+);(\d+)
            replacement: $1:$2
          - action: labelmap
            regex: __meta_kubernetes_service_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_service_name]
            action: replace
            target_label: kubernetes_name

      # https://github.com/prometheus/prometheus/blob/master/documentation/examples/prometheus-kubernetes.yml#L119
      - job_name: 'kubernetes-services'
        metrics_path: /probe
        params:
          module: [http_2xx]
        kubernetes_sd_configs:
          - role: service
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_probe]
            action: keep
            regex: true
          - source_labels: [__address__]
            target_label: __param_target
          - target_label: __address__
            replacement: blackbox
          - source_labels: [__param_target]
            target_label: instance
          - action: labelmap
            regex: __meta_kubernetes_service_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_service_name]
            target_label: kubernetes_name

      # https://github.com/prometheus/prometheus/blob/master/documentation/examples/prometheus-kubernetes.yml#L156
      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: (.+):(?:\d+);(\d+)
            replacement: ${1}:${2}
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: kubernetes_pod_name
  rules/alert.rules: |
    ALERT service_down
      IF up{job="prometheus"} == 0
      ANNOTATIONS {
        summary = "Instance {{ $labels.instance }} is down",
      }
    
    ALERT cpu_threshold_exceeded
      IF (100 * (1 - avg by(instance)(irate(node_cpu{job='prometheus',mode='idle'}[5m])))) > 80
      ANNOTATIONS {
        summary = "Instance {{ $labels.instance }} CPU usage is dangerously high",
        description = "This device's cpu usage has exceeded the threshold with a value of {{ $value }}.",
      }
    
    ALERT mem_threshold_exceeded
      IF (node_memory_MemFree{job='prometheus'} + node_memory_Cached{job='prometheus'} + node_memory_Buffers{job='prometheus'})/1000000 < 1024
      ANNOTATIONS {
        summary = "Instance {{ $labels.instance }} memory usage is dangerously high",
        description = "This device's memory usage has exceeded the threshold with a value of {{ $value }}.",
      }
    
    ALERT filesystem_threshold_exceeded
      IF node_filesystem_avail{job='prometheus',mountpoint='/',fstype='rootfs'} / node_filesystem_size{job='prometheus'} * 100 < 20
      ANNOTATIONS {
        summary = "Instance {{ $labels.instance }} filesystem usage is dangerously high",
        description = "This device's filesystem usage has exceeded the threshold with a value of {{ $value }}.",
      }
    
    ALERT celery_queue
      IF sum(rate(celery_queue[1m])) > 5
      ANNOTATIONS {
        summary = "Celery queue {{ $labels.queue }} is block",
      }
    
    ALERT response_error_rate
      IF sum(rate(statsd_django_http_responses{code="500"}[5m])) by (job) / sum(rate(statsd_django_http_responses[5m])) by (job) > 0.01
      ANNOTATIONS {
        summary = "Response error rate > 1% !!!",
      }
  rules/xiaolumm.rules: |
    xiaolumm:payment_count = increase(xiaolumm_payment_count[2d]) and xiaolumm_payment_count and  (time() + 8*3600) % (3600*24) / 5 + 200> count_over_time(xiaolumm_payment_count[2d])
    xiaolumm:payment_amount = increase(xiaolumm_payment_amount[2d]) and xiaolumm_payment_amount and  (time() + 8*3600) % (3600*24) / 5 + 200 > count_over_time(xiaolumm_payment_amount[2d])
    xiaolumm:boutique = delta(xiaolumm_boutique[1d]) and xiaolumm_boutique and  (time() + 8*3600) % (3600*24) / 5 + 200 > count_over_time(xiaolumm_boutique[48h])
    xiaolumm:mama_count = increase(xiaolumm_mama_count[7d]) and xiaolumm_mama_count and  (time() + 8*3600) % (3600*24) / 5 + 200> count_over_time(xiaolumm_mama_count[48h])
kind: ConfigMap
metadata:
  name: prometheus-core
